# Generated by Django 5.1.4 on 2025-01-01 04:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('description', models.TextField()),
                ('rate', models.FloatField()),
                ('vat_percent', models.FloatField(default=None, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limited', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.limited')),
                ('selfassesment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.selfassesment')),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_email', models.CharField(default='', max_length=100)),
                ('billing_address', models.CharField(default='', max_length=255)),
                ('remarks', models.TextField(default='')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('service_date', models.DateField()),
                ('due_date', models.DateField()),
                ('amount', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('is_paid', models.BooleanField(default=False)),
                ('invoice_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_to', to='invoice.company')),
            ],
        ),
        migrations.CreateModel(
            name='ItemsInInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('rate', models.FloatField(default=0)),
                ('vat_percent', models.FloatField(default=None, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('invoice_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.invoice')),
                ('invoice_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.invoiceitem')),
            ],
            options={
                'ordering': ['invoice_id', 'invoice_item_id'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('transaction_type', models.CharField(choices=[('CREDIT', 'CREDIT'), ('DEBIT', 'DEBIT')], default='CREDIT', max_length=100)),
                ('current_balance', models.FloatField(default=0)),
                ('amount', models.FloatField(default=0)),
                ('invoice_reference_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='invoice.invoice')),
                ('transaction_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.company')),
            ],
        ),
        migrations.AddConstraint(
            model_name='company',
            constraint=models.CheckConstraint(condition=models.Q(('selfassesment__isnull', True), ('limited__isnull', True), _connector='OR'), name='limited_or_selfassesment_per_row'),
        ),
        migrations.AddConstraint(
            model_name='itemsininvoice',
            constraint=models.UniqueConstraint(fields=('invoice_id', 'invoice_item_id'), name='unique_invoice_item'),
        ),
    ]
