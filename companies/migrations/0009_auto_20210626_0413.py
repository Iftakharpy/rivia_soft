# Generated by Django 3.2.2 on 2021-06-25 22:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('companies', '0008_auto_20210604_1623'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='selfassesmentaccountsubmission',
            unique_together={('client_id', 'tax_year')},
        ),
        migrations.CreateModel(
            name='Limited',
            fields=[
                ('client_id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Unique ID for client')),
                ('date_of_registration', models.DateField(default=django.utils.timezone.localtime, verbose_name='Registration date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('client_file_number', models.DecimalField(decimal_places=10, max_digits=19, null=True, unique=True, verbose_name='File Number')),
                ('client_name', models.CharField(db_index=True, max_length=100, verbose_name='Full Name / Business Name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('PAYE_number', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='PAYE Number')),
                ('director_phone_number', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Director Phone numbers')),
                ('director_email', models.EmailField(blank=True, max_length=320, null=True, verbose_name='Director Email')),
                ('director_address', models.TextField(blank=True, db_index=True, null=True, verbose_name='Director Address')),
                ('director_post_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Director Postal Code')),
                ('gateway_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Director Gateway ID')),
                ('gateway_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Gateway Password')),
                ('AOR_number', models.CharField(blank=True, db_index=True, max_length=511, null=True, verbose_name='Account Office Reference number')),
                ('business_phone_number', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Business Phone numbers')),
                ('business_email', models.EmailField(blank=True, max_length=320, null=True, verbose_name='Business Email')),
                ('business_address', models.TextField(blank=True, db_index=True, null=True, verbose_name='Business Address')),
                ('business_post_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Business Postal Code')),
                ('HMRC_referance', models.CharField(blank=True, max_length=1023, null=True, verbose_name='HMRC Referance')),
                ('UTR', models.CharField(blank=True, db_index=True, max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid UTR', message='Enter 10 digit UTR Number', regex=re.compile('^[0-9]{10}$'))], verbose_name='UTR')),
                ('NINO', models.CharField(blank=True, max_length=9, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid NINO', message='Enter 9 chars long NINO.', regex=re.compile('^(?!BG|GB|KN|NK|NT|TN|ZZ)[ABCEGHJKLMNOPRSTWXYZ][ABCEGHJKLMNPRSTWXYZ][0-9]{6}[ABCD]$', 2))], verbose_name='NINO')),
                ('HMRC_agent', models.BooleanField(default=False, verbose_name='HMRC agent active status')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name of Bank')),
                ('bank_account_number', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(code='Invalid Bank Account', message='Enter 8 digit Bank Account Number', regex=re.compile('^[0-9]{8}$'))], verbose_name='Account number in Bank')),
                ('bank_sort_code', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator(code='Invalid Sort Code', message='Enter 6 digit Sort Code', regex=re.compile('^[0-9]{6}$'))], verbose_name='Bank Sort Code')),
                ('bank_account_holder_name', models.CharField(blank=True, max_length=100, verbose_name='Bank Account Holder Name')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='limited_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Limited',
                'verbose_name_plural': 'Limiteds',
            },
        ),
    ]
